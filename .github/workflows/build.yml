name: cbdb pipeline
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main

env:
  BUILD_TYPE: "debug"
  FTS_MODE: "internal_fts"
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

permissions:
  id-token: write
  contents: read
jobs:
  build:
    if: github.event.pull_request.draft == false
    runs-on: [self-hosted, example]
    steps:
      - uses: actions/checkout@v3
      - name: Test Fail
        run: exit 1
      - name: Run build script
        run: |
          echo $GITHUB_RUN_ID > BUILD_NUMBER
          hd-ci/compile_cbdb.bash ${GEN_DOCKER_TAG}
      - uses: actions/upload-artifact@v3
        with:
          name: cbdb-variables
          path: /opt/actions-runner/_work/cloudberrydb/cloudberrydb/cbdb-artifacts.txt
      - uses: actions/upload-artifact@v3
        with:
          name: cbdb-package
          path: /tmp/server-build*
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        if: failure()
        with:
          limit-access-to-actor: true
          limit-access-to-users: hashdata-build
          wait-timeout-minutes: 60
  icw-test:
    needs: build
    runs-on: [self-hosted, example]
    env:
      MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
      TEST_OS: "centos"
      DUMP_DB: "true"
    steps:
      - uses: actions/checkout@v3
        with:
          path: "gpdb_src"
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-variables
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-package
          path: /opt/
      - name: Run icw-test script
        run: |
          mkdir /code
          cp -a gpdb_src/ /code
          cd /code
          echo $GITHUB_RUN_ID > gpdb_src/BUILD_NUMBER
          gpdb_src/hd-ci/icw_cbdb.bash $FTS_MODE
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: icw-test
          path: |
            /code/gpdb_src/src/test/regress/regression.out
            /code/gpdb_src/src/test/regress/regression.diffs
            /code/gpdb_src/src/test/regress/results/
            /code/gpdb_src/src/test/regress/expected/
            /code/gpdb_src/src/test/isolation2/regression.out
            /code/gpdb_src/src/test/isolation2/regression.diffs
            /code/gpdb_src/src/test/isolation2/results/
            /code/gpdb_src/src/test/isolation2/expected/
            /code/gpdb_src/gpAux/gpdemo/datadirs/gpAdminLogs
            /code/gpdb_src/gpAux/gpdemo/datadirs/standby/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/qddir/demoDataDir-1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast3/demoDataDir2/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror3/demoDataDir2/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/qddir/demoDataDir-1/log
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast1/demoDataDir0/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast2/demoDataDir1/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast3/demoDataDir2/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast_mirror1/demoDataDir0/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast_mirror2/demoDataDir1/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast_mirror3/demoDataDir2/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/upgrade/qd/*.log
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        if: failure()
        with:
          limit-access-to-actor: true
          limit-access-to-users: hashdata-build
          wait-timeout-minutes: 60
  ic-singlenode-test:
    needs: build
    runs-on: [ self-hosted, example ]
    env:
      MAKE_TEST_COMMAND: "-C src/test installcheck-singlenode"
      NUM_PRIMARY_MIRROR_PAIRS: "0"
      TEST_OS: "centos"
      DUMP_DB: "true"
    steps:
      - uses: actions/checkout@v3
        with:
          path: "gpdb_src"
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-variables
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-package
          path: /opt/
      - name: Run icw-test script
        run: |
          mkdir /code
          cp -a gpdb_src/ /code
          cd /code
          echo $GITHUB_RUN_ID > gpdb_src/BUILD_NUMBER
          gpdb_src/hd-ci/icw_cbdb.bash $FTS_MODE
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cbdb-ic-singlenode-test-log
          path: |
            /code/gpdb_src/src/test/singlenode_regress/regression.out
            /code/gpdb_src/src/test/singlenode_regress/regression.diffs
            /code/gpdb_src/src/test/singlenode_regress/results/
            /code/gpdb_src/src/test/singlenode_regress/expected/
            /code/gpdb_src/src/test/singlenode_isolation2/regression.out
            /code/gpdb_src/src/test/singlenode_isolation2/regression.diffs
            /code/gpdb_src/src/test/singlenode_isolation2/results/
            /code/gpdb_src/src/test/singlenode_isolation2/expected/
            /code/gpdb_src/src/test/isolation/regression.out
            /code/gpdb_src/src/test/isolation/regression.diffs
            /code/gpdb_src/src/test/isolation/output_iso/results/
            /code/gpdb_src/src/test/isolation/expected/
            /code/gpdb_src/gpAux/gpdemo/datadirs/gpAdminLogs
            /code/gpdb_src/gpAux/gpdemo/datadirs/standby/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/singlenodedir/demoDataDir-1/log/
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        if: failure()
        with:
          limit-access-to-actor: true
          limit-access-to-users: hashdata-build
          wait-timeout-minutes: 60
  icw-orca-test:
    needs: build
    runs-on: [self-hosted, example]
    env:
      MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
      TEST_OS: "centos"
      DUMP_DB: "true"
    steps:
      - uses: actions/checkout@v3
        with:
          path: "gpdb_src"
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-variables
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-package
          path: /opt/
      - name: Run icw-orca-test script
        run: |
          mkdir /code
          cp -a gpdb_src/ /code
          cd /code
          echo $GITHUB_RUN_ID > gpdb_src/BUILD_NUMBER
          gpdb_src/hd-ci/icw_cbdb.bash $FTS_MODE
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: icw-orca-test
          path: |
            /code/gpdb_src/src/test/regress/regression.out
            /code/gpdb_src/src/test/regress/regression.diffs
            /code/gpdb_src/src/test/regress/results/
            /code/gpdb_src/src/test/regress/expected/
            /code/gpdb_src/src/test/isolation2/regression.out
            /code/gpdb_src/src/test/isolation2/regression.diffs
            /code/gpdb_src/src/test/isolation2/results/
            /code/gpdb_src/src/test/isolation2/expected/
            /code/gpdb_src/gpAux/gpdemo/datadirs/gpAdminLogs
            /code/gpdb_src/gpAux/gpdemo/datadirs/standby/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/qddir/demoDataDir-1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast3/demoDataDir2/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror3/demoDataDir2/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/qddir/demoDataDir-1/log
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast1/demoDataDir0/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast2/demoDataDir1/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast3/demoDataDir2/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast_mirror1/demoDataDir0/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast_mirror2/demoDataDir1/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast_mirror3/demoDataDir2/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/upgrade/qd/*.log
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        if: failure()
        with:
          limit-access-to-actor: true
          limit-access-to-users: hashdata-build
          wait-timeout-minutes: 60
  icw-parallel-test:
    needs: build
    runs-on: [self-hosted, example]
    env:
      MAKE_TEST_COMMAND: "-C src/test/regress installcheck-cbdb-parallel"
      TEST_OS: "centos"
      DUMP_DB: "true"
    steps:
      - uses: actions/checkout@v3
        with:
          path: "gpdb_src"
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-variables
          path: /opt/
      - uses: actions/download-artifact@v3
        with:
          name: cbdb-package
          path: /opt/
      - name: Run icw-parallel-test script
        run: |
          mkdir /code
          cp -a gpdb_src/ /code
          cd /code
          echo $GITHUB_RUN_ID > gpdb_src/BUILD_NUMBER
          gpdb_src/hd-ci/icw_cbdb.bash $FTS_MODE
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: icw-parallel-test
          path: |
            /code/gpdb_src/src/test/regress/regression.out
            /code/gpdb_src/src/test/regress/regression.diffs
            /code/gpdb_src/src/test/regress/results/
            /code/gpdb_src/src/test/regress/expected/
            /code/gpdb_src/src/test/isolation2/regression.out
            /code/gpdb_src/src/test/isolation2/regression.diffs
            /code/gpdb_src/src/test/isolation2/results/
            /code/gpdb_src/src/test/isolation2/expected/
            /code/gpdb_src/gpAux/gpdemo/datadirs/gpAdminLogs
            /code/gpdb_src/gpAux/gpdemo/datadirs/standby/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/qddir/demoDataDir-1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast3/demoDataDir2/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror1/demoDataDir0/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror2/demoDataDir1/log/
            /code/gpdb_src/gpAux/gpdemo/datadirs/dbfast_mirror3/demoDataDir2/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/qddir/demoDataDir-1/log
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast1/demoDataDir0/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast2/demoDataDir1/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast3/demoDataDir2/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast_mirror1/demoDataDir0/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast_mirror2/demoDataDir1/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/datadirs/dbfast_mirror3/demoDataDir2/log/
            /code/gpdb_src/src/bin/pg_upgrade/tmp_check/upgrade/qd/*.log
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        if: failure()
        with:
          limit-access-to-actor: true
          limit-access-to-users: hashdata-build
          wait-timeout-minutes: 60
